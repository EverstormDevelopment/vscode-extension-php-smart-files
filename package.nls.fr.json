{
  "php-smart-files.submenus.main.label": "Créer un fichier PHP",

  "php-smart-files.commands.newEmptyPhpFile.title": "Fichier PHP",
  "php-smart-files.commands.newEmptyPhpClass.title": "Classe PHP",
  "php-smart-files.commands.newEmptyPhpInterface.title": "Interface PHP",
  "php-smart-files.commands.newEmptyPhpEnum.title": "Enum PHP",
  "php-smart-files.commands.newEmptyPhpTrait.title": "Trait PHP",
  "php-smart-files.commands.newTemplatePhpClass.title": "Classe PHP depuis modèle",
  "php-smart-files.commands.newTemplatePhpInterface.title": "Interface PHP depuis modèle",
  "php-smart-files.commands.newTemplatePhpEnum.title": "Enum PHP depuis modèle",
  "php-smart-files.commands.newTemplatePhpTrait.title": "Trait PHP depuis modèle",
  "php-smart-files.commands.newSymfonyController.title": "Symfony Controller depuis modèle",
  "php-smart-files.commands.newSymfonyCommand.title": "Symfony Command depuis modèle",
  "php-smart-files.commands.newSymfonyForm.title": "Symfony Form depuis modèle",

  "php-smart-files.config.useStrictTypeInTemplates.description": "Détermine si `declare(strict_types=1);` est inclus dans les fichiers générés.",

  "php-smart-files.config.useFallbackNamespace.description": "Détermine s'il faut utiliser un espace de noms de secours lorsqu'aucun espace de noms n'a pu être résolu via composer.json. Lorsqu'il est activé, construit un espace de noms basé sur le chemin relatif du fichier depuis le répertoire de l'espace de travail, en commençant par l'espace de noms de secours comme préfixe. Lorsqu'il est désactivé, aucun espace de noms ne sera ajouté.",
  
  "php-smart-files.config.fallbackNamespace.description": "Définit le préfixe de base de l'espace de noms à utiliser lorsque l'espace de noms de secours est activé. L'espace de noms complet sera construit en combinant ce préfixe avec la structure de répertoires du fichier (par exemple, 'App' + '\\SousRépertoire\\AutreRépertoire' devient 'App\\SousRépertoire\\AutreRépertoire').",
  "php-smart-files.config.fallbackNamespace.patternErrorMessage": "L'espace de noms doit être un espace de noms PHP valide selon PSR-4 (par exemple, 'App', 'Vendor\\Service'). Chaque segment doit commencer par une lettre majuscule.",
  
  "php-smart-files.config.refactorNamespacesOnFileMoved.description": "Détermine si, après le déplacement d'un fichier, l'espace de noms dans le fichier et dans ses références doit être refactorisé.",
  "php-smart-files.config.refactorNamespacesOnFileMoved.confirm": "Avec confirmation",
  "php-smart-files.config.refactorNamespacesOnFileMoved.always": "Toujours sans confirmation",
  "php-smart-files.config.refactorNamespacesOnFileMoved.never": "Jamais",

  "php-smart-files.config.refactorNamespacesOnFileRenamed.description": "Détermine si, après le renommage d'un fichier, le nom de la classe ou d'autres identificateurs de déclaration doivent être adaptés au nouveau nom du fichier. Cela inclut la mise à jour de toutes les références internes (comme MyClass::SOME_STATIC), des déclarations 'use' ainsi que toutes les références externes dans d'autres fichiers.",
  "php-smart-files.config.refactorNamespacesOnFileRenamed.confirm": "Avec confirmation",
  "php-smart-files.config.refactorNamespacesOnFileRenamed.always": "Toujours sans confirmation",
  "php-smart-files.config.refactorNamespacesOnFileRenamed.never": "Jamais",

  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.description": "Détermine si, après le déplacement ou le renommage d'un répertoire, les espaces de noms dans tous les fichiers de ce répertoire et leurs références doivent être refactorisés.",
  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.confirm": "Avec confirmation",
  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.always": "Toujours sans confirmation",
  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.never": "Jamais",

  "php-smart-files.config.refactorNamespacesExcludeDirectories.description": "Les répertoires spécifiés seront exclus lors du refactoring des espaces de noms. (Remarque : Les entrées doivent être au format de motif Glob, par exemple, `/vendor/**`, `var/cache/**` ou `**/temp/**`.)"
}