{
  "php-smart-files.submenus.main.label": "Crear archivo PHP",

  "php-smart-files.commands.newEmptyPhpFile.title": "Archivo PHP",
  "php-smart-files.commands.newEmptyPhpClass.title": "Clase PHP",
  "php-smart-files.commands.newEmptyPhpInterface.title": "Interfaz PHP",
  "php-smart-files.commands.newEmptyPhpEnum.title": "Enum PHP",
  "php-smart-files.commands.newEmptyPhpTrait.title": "Trait PHP",
  "php-smart-files.commands.newTemplatePhpClass.title": "Clase PHP desde plantilla",
  "php-smart-files.commands.newTemplatePhpInterface.title": "Interfaz PHP desde plantilla",
  "php-smart-files.commands.newTemplatePhpEnum.title": "Enum PHP desde plantilla",
  "php-smart-files.commands.newTemplatePhpTrait.title": "Trait PHP desde plantilla",
  "php-smart-files.commands.newSymfonyController.title": "Symfony Controller desde plantilla",
  "php-smart-files.commands.newSymfonyCommand.title": "Symfony Command desde plantilla",
  "php-smart-files.commands.newSymfonyForm.title": "Symfony Form desde plantilla",

  "php-smart-files.config.useStrictTypeInTemplates.description": "Determina si `declare(strict_types=1);` se incluye en los archivos generados.",

  "php-smart-files.config.useFallbackNamespace.description": "Determina si usar un espacio de nombres alternativo cuando no se pudo resolver ningún espacio de nombres. Cuando está desactivado, no se añadirá ningún espacio de nombres.",
  "php-smart-files.config.fallbackNamespace.description": "Define el espacio de nombres a utilizar cuando el espacio de nombres alternativo está habilitado y no se pudo encontrar ningún otro espacio de nombres.",
  "php-smart-files.config.fallbackNamespace.patternErrorMessage": "El espacio de nombres debe ser un espacio de nombres PHP válido según PSR-4 (por ejemplo, 'App', 'Vendor\\Service'). Cada segmento debe comenzar con una letra mayúscula.",
  
  "php-smart-files.config.refactorNamespacesOnFileMoved.description": "Determina si, después de mover un archivo, se debe refactorizar el espacio de nombres en el archivo y en sus referencias.",
  "php-smart-files.config.refactorNamespacesOnFileMoved.confirm": "Con confirmación",
  "php-smart-files.config.refactorNamespacesOnFileMoved.always": "Siempre sin confirmación",
  "php-smart-files.config.refactorNamespacesOnFileMoved.never": "Nunca",

  "php-smart-files.config.refactorNamespacesOnFileRenamed.description": "Determina si, después de renombrar un archivo, el nombre de la clase u otros identificadores de declaración deben adaptarse al nuevo nombre del archivo. Esto incluye la actualización de todas las referencias internas (como MyClass::SOME_STATIC), las declaraciones 'use' y todas las referencias externas en otros archivos.",
  "php-smart-files.config.refactorNamespacesOnFileRenamed.confirm": "Con confirmación",
  "php-smart-files.config.refactorNamespacesOnFileRenamed.always": "Siempre sin confirmación",
  "php-smart-files.config.refactorNamespacesOnFileRenamed.never": "Nunca",

  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.description": "Determina si, después de mover o renombrar un directorio, se deben refactorizar los espacios de nombres en todos los archivos dentro de ese directorio y sus referencias.",
  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.confirm": "Con confirmación",
  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.always": "Siempre sin confirmación",
  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.never": "Nunca",

  "php-smart-files.config.refactorNamespacesExcludeDirectories.description": "Los directorios especificados se excluirán durante la refactorización de espacios de nombres. (Nota: Las entradas deben estar en el formato de patrón Glob, por ejemplo, `/vendor/**`, `var/cache/**` o `**/temp/**`.)"
}