{
  "php-smart-files.submenus.main.label": "PHP-Datei erstellen",
  "php-smart-files.commands.newEmptyPhpFile.title": "PHP-Datei",
  "php-smart-files.commands.newEmptyPhpFunction.title": "PHP-Funktion",
  "php-smart-files.commands.newEmptyPhpClass.title": "PHP-Klasse",
  "php-smart-files.commands.newEmptyPhpInterface.title": "PHP-Interface",
  "php-smart-files.commands.newEmptyPhpEnum.title": "PHP-Enum",
  "php-smart-files.commands.newEmptyPhpTrait.title": "PHP-Trait",
  "php-smart-files.commands.newTemplatePhpFunction.title": "PHP-Funktion aus Vorlage",
  "php-smart-files.commands.newTemplatePhpClass.title": "PHP-Klasse aus Vorlage",
  "php-smart-files.commands.newTemplatePhpInterface.title": "PHP-Interface aus Vorlage",
  "php-smart-files.commands.newTemplatePhpEnum.title": "PHP-Enum aus Vorlage",
  "php-smart-files.commands.newTemplatePhpTrait.title": "PHP-Trait aus Vorlage",
  "php-smart-files.commands.newSymfonyController.title": "Symfony Controller aus Vorlage",
  "php-smart-files.commands.newSymfonyCommand.title": "Symfony Command aus Vorlage",
  "php-smart-files.commands.newSymfonyForm.title": "Symfony Form aus Vorlage",

  "php-smart-files.config.useStrictTypeInTemplates.description": "Bestimmt, ob `declare(strict_types=1);` in die generierten Dateien eingefügt werden soll.",

  "php-smart-files.config.useFallbackNamespace.description": "Bestimmt, ob ein Fallback-Namespace verwendet werden soll, wenn kein Namespace über composer.json aufgelöst werden konnte. Wenn aktiviert, wird ein Namespace basierend auf dem relativen Pfad der Datei vom Arbeitsverzeichnis aus erstellt, beginnend mit dem Fallback-Namespace als Präfix. Wenn deaktiviert, wird kein Namespace hinzugefügt.",
  
  "php-smart-files.config.fallbackNamespace.description": "Definiert den Basis-Namespace-Präfix, der verwendet wird, wenn der Fallback-Namespace aktiviert ist. Der vollständige Namespace wird durch die Kombination dieses Präfixes mit der Verzeichnisstruktur der Datei erstellt (z.B. wird aus 'App' + '\\UnterVerzeichnis\\WeiteresVerzeichnis' der Namespace 'App\\UnterVerzeichnis\\WeiteresVerzeichnis').",
  "php-smart-files.config.fallbackNamespace.patternErrorMessage": "Der Namespace muss ein gültiger PHP-Namespace gemäß PSR-4 sein (z.B. 'App', 'Vendor\\Service'). Jedes Segment muss mit einem Großbuchstaben beginnen.",
  
  "php-smart-files.config.refactorNamespacesOnFileMoved.description": "Bestimmt, ob nach dem Verschieben einer Datei der Namespace in der Datei und in deren Referenzen refaktoriert werden soll.",
  "php-smart-files.config.refactorNamespacesOnFileMoved.confirm": "Nach Bestätigung",
  "php-smart-files.config.refactorNamespacesOnFileMoved.always": "Immer ohne Nachfrage",
  "php-smart-files.config.refactorNamespacesOnFileMoved.never": "Niemals",
  
  "php-smart-files.config.refactorNamespacesOnFileRenamed.description": "Bestimmt, ob nach dem Umbenennen einer Datei der Klassenname oder andere Deklarationsbezeichner an den neuen Dateinamen angepasst werden sollen. Dies umfasst auch die Aktualisierung aller internen Verweise (wie MyClass::SOME_STATIC), der 'use' Statements sowie aller externen Referenzen in anderen Dateien.",
  "php-smart-files.config.refactorNamespacesOnFileRenamed.confirm": "Nach Bestätigung",
  "php-smart-files.config.refactorNamespacesOnFileRenamed.always": "Immer ohne Nachfrage",
  "php-smart-files.config.refactorNamespacesOnFileRenamed.never": "Niemals",
  
  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.description": "Bestimmt, ob nach dem Verschieben oder Umbenennen eines Verzeichnisses die Namespaces in allen Dateien innerhalb dieses Verzeichnisses und deren Referenzen refaktoriert werden sollen.",
  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.confirm": "Nach Bestätigung",
  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.always": "Immer ohne Nachfrage",
  "php-smart-files.config.refactorNamespacesOnDirectoryChanges.never": "Niemals",
  
  "php-smart-files.config.refactorNamespacesExcludeDirectories.description": "Die angegebenen Verzeichnisse werden beim Refactoring von Namespaces ausgeschlossen. (Anmerkung: Die Angaben werden im Glob-Muster erwartet, z.B. `/vendor/**`, `var/cache/**` oder `**/temp/**`.)"
}